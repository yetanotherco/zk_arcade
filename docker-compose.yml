networks:
  zk_arcade_network:
    name: zk_arcade_network
    driver: bridge

services:
  db:
    image: postgres
    restart: always
    container_name: zk_arcade_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: zk_arcade_dev
    ports:
      - "5433:5432"

  grafana:
    image: grafana/grafana:10.1.10
    container_name: zk_arcade_grafana
    volumes:
      - zk_arcade_grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      # See https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables
      # and https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/
      # They recommend using env vars instead of overwriting config.ini
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - zk_arcade_network

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: zk_arcade_prometheus
    volumes:
      - ./prometheus:/etc/prometheus
      - zk_arcade_prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
      - --web.enable-remote-write-receiver
    restart: unless-stopped
    expose:
      - 9090
    networks:
      - zk_arcade_network
    # host.docker.internal might not work on linux
    # https://stackoverflow.com/a/67158212/4971151
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  zk_arcade_prometheus_data: {}
  zk_arcade_grafana_data: {}
